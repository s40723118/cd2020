<h1>About</h1>
<p>Course Title: Collaborative Product Design and  Practice (short name: CD)</p>
<p>Repository: <a href="https://github.com/s40723118/cd2020">https://github.com/s40723118/cd2020</a></p>
<h2>Grouping</h2>
<h4>亂數分組:</h4>
<p style="padding-left: 30px;">Base upon the Dart + Python random grouping system and the <a href="https://github.com/mdecourse/wcms-scrum1">https://github.com/mdecourse/wcms-scrum1</a> (<a href="https://wcms-scrum1.herokuapp.com/gear_index">https://wcms-scrum1.herokuapp.com/gear_index</a>), we may be able to create more collaborative product design service.</p>
<p style="padding-left: 30px;">Flask Python programs can be deployed at Heroku or self install Ubuntu server. ( <a href="https://mdecp2018.github.io/finalproject-bgx/content/Heroku%20%E8%A8%AD%E5%AE%9A.html">https://mdecp2018.github.io/finalproject-bgx/content/Heroku%20%E8%A8%AD%E5%AE%9A.html</a>) </p>
<p><a href="https://mde.tw/cd2020/downloads/2020spring_cd_2a_list.txt">https://mde.tw/cd2020/downloads/2020spring_cd_2a_list.txt</a> was taken from <a href="https://osa.nfu.edu.tw/">https://osa.nfu.edu.tw/</a> on Feb. 19, 2020.</p>
<p>The most updated list: <a href="http://s1.mde.nfu.edu.tw:8000/?semester=1082&amp;courseno=0767">http://s1.mde.nfu.edu.tw:8000/?semester=1082&amp;courseno=0767</a> </p>
<p>semester: 1082</p>
<p>courseno for 2a:  0767</p>
<p>courseno for 2b: 0780</p>
<p>Under https protocol use port 7443, for http use port 8000.</p>
<p>學員名單 URL: <input id="studListUrl" size="70" type="text" value="http://s1.mde.nfu.edu.tw:8000/?semester=1082&amp;courseno=0767 "/><br/> <input id="submit" type="submit" value="開始分組"/><br/> <textarea cols="80" id="output" rows="10"></textarea></p>
<script src="https://mde.tw/cd2020/downloads/dart_ex/even_grouping/evenGrouping.js"></script>
<p><a href="https://dartpad.github.io/embed-html.html?gh_owner=mdecourse&amp;gh_repo=cd2020&amp;gh_path=downloads/dart_ex/even_grouping&amp;theme=dark">Dart source code for random grouping</a></p>
<h4>evenGrouping.dart:</h4>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">import 'dart:html';
 
  InputElement studListUrl = querySelector("#studListUrl");
  String studUrl;
  // 將 Label 改為 Textarea, 避免產生過程結果嵌入所在頁面
  TextAreaElement output = querySelector("#output");
 
main() {
  querySelector("#submit").onClick.listen((e) =&gt; grouping());
}
 
grouping() {
  output.innerHtml = "";
 
  if (studListUrl.value != "") {
    studUrl = studListUrl.value;
  } else {
    studUrl = 'https://mde.tw/group/downloads/2019fall_cp_1a_list.txt';
  }
 
  // 組序由 1 開始
  int gth = 1;
  // 迴圈序號變數
  int i;
  int j;
  int total;
  int inc;
  // 每組學員暫存數列
  var gpList = [];
  // 全班分組數列
  var group = [];
  // 各組人數數列
  var numList = [];
  var courseTitle = 'cd2020';
 
  HttpRequest.getString(studUrl).then((String resp) {
    // 利用 trim() 去除字串最後的跳行符號, 之後再利用 split() 根據 \n 轉為數列
    var studList = resp.trim().split("\n");
    // 數列利用 shuffle() 方法以隨機方法弄亂順序
    studList.shuffle();
    total = studList.length;
    output.text += "全班總計" + total.toString() + " 人\n";
    numList = getNumList(studList.length);
    inc = 0;
    for (i in numList){
      // 列印區隔符號
      output.text += '=' * 20 + "\n";
      output.text += "group $gth 有 " + i.toString() + " 人: \n";
      gpList = [];
      for (j = 0; j &lt; i; j++){
        output.text += studList[j+inc] + "\n";
        // 在各分組數列中加入將對應的學員學號
        gpList.add(studList[j+inc]);
      }
      gth = gth + 1;
      inc = inc + j;
        //output.text += studList[j] + "\n";
        // 逐步將各組暫存的分組數列加入全班分組數列中
      gpList.sort();
      group.add(gpList);
    }
    // 列出全班分組數列
    output.text += group.toString() + "\n";
    // 列出已經排序後的分組名單
    output.text += '=' * 25 + "\n";
    output.text += '以下為排序後的各組成員名單: \n';
    gth = 1;
    /*
    404231
    s4052
    4062
    s4072
    4082
    5072
    5083
    */
    // 先列出純文字以 \n 跳行組員資料
    for (i=0; i &lt; group.length; i++){
      // 列印區隔符號
      output.text += '=' * 20 + "\n";
      output.text += "group $gth \n";
      gpList = [];
      for (j=0; j &lt; group[i].length; j++){
        output.text += group[i][j] + "\n";
      }
      gth = gth + 1;
    }
    
    gth = 1;
    // 最後列出超文件以 &lt;br\&gt; 跳行組員資料, 包含倉儲與網站
    for (i=0; i &lt; group.length; i++){
      // 列印區隔符號
      output.text += '\n' + '=' * 30 + "&lt;br \&gt;";
      output.text += "group $gth &lt;br \&gt;";
      gpList = [];
      for (j=0; j &lt; group[i].length; j++){
          if (group[i][j].startsWith('4052') || group[i][j].startsWith('4072')) {
              output.text += "Repository: &lt;a href='https://github.com/s" + 
                                      group[i][j] + "/" + courseTitle + "'&gt;" + group[i][j] + 
                                      "&lt;/a&gt;" + " | Site: &lt;a href='https://s" + group[i][j] + 
                                      ".github.io/" + courseTitle + "'&gt;" + group[i][j] + 
                                      "&lt;/a&gt;&lt;br \&gt;";
          }
          else {
              output.text += "Repository: &lt;a href='https://github.com/" + 
                                      group[i][j] + "/" + courseTitle +"'&gt;" + group[i][j] + 
                                      "&lt;/a&gt;" + " | Site: &lt;a href='https://" + group[i][j] + 
                                      ".github.io/" + courseTitle + "'&gt;" + group[i][j] + 
                                      "&lt;/a&gt;&lt;br \&gt;";
          }
      }
      gth = gth + 1;
    }
  });
}
 
List getNumList(int total){
  // total student number
  // int total = 65;
  // initial each group expect to be "eachGrp" number of people
  int eachGrp = 10;
  // may divide into "grpNum" number of group
  int grpNum = total ~/ eachGrp;
  // vacant list
  var splits = [];
  // find remainder when total number divid into "grpNum" number of group
  int remainder = total % grpNum;
  // number of people in one group by calculation
  int calGrp = total ~/ grpNum;
 
  for (int i = 0; i &lt; grpNum; i++) {
    splits.add(calGrp);
  }
  //print(splits);
 
  for (int i = 0; i &lt; remainder; i++) {
    splits[i] += 1;
  }
  //print(splits);
  return splits;
 }</pre>
<h4>index.html:</h4>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;h1&gt;亂數分組:&lt;/h1&gt;
學員名單 URL: &lt;input type="text" id="studListUrl" size="50" value="https://mde.tw/wcm2020/downloads/2020spring_wcm_1a_list.txt"&gt;&lt;br /&gt;
&lt;input type="submit" value="開始分組" id="submit"&gt;&lt;br /&gt;
&lt;textarea id="output" cols="80" rows="10"&gt;&lt;/textarea&gt;</pre>
<h4>style.css:</h4>
<pre class="brush:css;auto-links:false;toolbar:false" contenteditable="false">body {
  color: white;
  font-size: 20px;
}

input, select, textarea {
font-size: 100%;
}</pre>
<h4>get_student.py</h4>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from flask import Flask, request 
from flask_cors import CORS

import requests
import bs4
import ssl

'''
https://s1.mde.nfu.edu.tw:7443/?semester=1082&amp;courseno=0767
cd
2a 1082/0767
2b 1082/0780

2a 1072/0777
2b 1072/0790
2a 1062/0788
2a 1062/0802

wcm
1082/0744

1072/0754
1062/0765

wcmj
1082/2418
'''

app = Flask(__name__)
CORS(app)

@app.route('/studlist')
@app.route('/')
def studlist():
    semester = request.args.get('semester')
    courseno = request.args.get('courseno')
    if semester == None:
        semester = '1082'
    if courseno == None:
        courseno = '0744'
    
    url = 'https://osa.nfu.edu.tw/query/studlist_ajax.php'
    post_var = {'pselyr': semester, 'pseqno': courseno}

    result = requests.post(url, data = post_var)

    soup = bs4.BeautifulSoup(result.content, 'lxml')
    table = soup.find('table', {'class': 'tbcls'})
    data = []
    rows = table.find_all('tr')
    for row in rows:
        cols = row.find_all('td')
        cols = [ele.text.strip() for ele in cols]
        data.append([ele for ele in cols if ele]) # Get rid of empty values
    output = ""
    for i in data[2:]:
        #print(i[0])
        output +=i[0] + "\n"
    return output
    #return  str(pselyr) + " + " +str(pseqno)

# 即使在近端仍希望以 https 模式下執行
context = ssl.SSLContext(ssl.PROTOCOL_TLSv1_2)
context.load_cert_chain('localhost.crt', 'localhost.key')

# 取 flaskapp.py 中的 uwsgi 變數設定
uwsgi = False
if uwsgi:
    # 表示程式在雲端執行
    application = app
else:
    # 表示在近端執行, 以 python3 wsgi.py 執行
    app.run(host='127.0.0.1', port=5443, debug=True, ssl_context=context)
</pre>
<h4>nginx sites-available/default settings:</h4>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">server {
    listen 8000;
    server_name s1.mde.nfu.edu.tw;
    charset utf-8;
    
    listen 7443 ssl;
 
    location /static {
        alias /home/kmol2019/course_studlist/static/;
    }
 
    location / {
        include uwsgi_params;
        uwsgi_pass  127.0.0.1:8087;
    }
    
    ssl_certificate /etc/stunnel/localhost.crt;
    ssl_certificate_key /etc/stunnel/localhost.key;
    ssl_session_timeout 5m;
    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
    ssl_prefer_server_ciphers on;
    try_files $uri $uri/ =404;
}</pre>
<h4>uwsgi7.ini</h4>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">[uwsgi]
socket = 127.0.0.1:8087
uid = kmol2019
gid = kmol2019
plugins-dir = /usr/lib/uwsgi/plugins/
plugin = python3
master = true
logto = /var/log/uwsgi/emperor.log
logfile-chown = kmol2019:kmol2019
processes = 4
threads = 2
chdir = /home/kmol2019/course_studlist
wsgi-file = /home/kmol2019/course_studlist/get_student.py</pre>
<h4>/etc/systemd/system/cmsimfly.service</h4>
<h2>Grading</h2>
<h4>Grading percentage:</h4>
<p style="padding-left: 30px;">Self-evaluation (30%)</p>
<p style="padding-left: 30px;">Peer Review (30%)</p>
<p style="padding-left: 30px;">Teacher Grading (40%)</p>
<h4>Grading content:</h4>
<p style="padding-left: 30px;">Attendance, Github commits, website and blog maintenance, and note taking (40%)</p>
<p style="padding-left: 30px;">Assignment 1 presentation (Youtube and Reveal.js) (10%)</p>
<p style="padding-left: 30px;">Assignment 2 presentation (Youtube and Reveal.js) (10%)</p>
<p style="padding-left: 30px;">Assignment 3 presentation (Youtube and Reveal.js) (10%)</p>
<p style="padding-left: 30px;">Final Project (Youtube, Reveal.js and pdf report) (30%)</p>
<p style="padding-left: 30px;"></p>
<h2>KMOL2020</h2>
<h4>Create Portable Programming System for Windows 10:</h4>
<p>PortableGit: <a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a></p>
<p>MSYS2: <a href="https://www.msys2.org/">https://www.msys2.org/</a></p>
<p>Python 3.8.1: <a href="https://www.python.org/downloads/">https://www.python.org/downloads/</a></p>
<p style="padding-left: 30px;">CMSiMDE: <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a></p>
<p style="padding-left: 60px;">Flask: <a href="https://github.com/pallets/flask">https://github.com/pallets/flask</a></p>
<p style="padding-left: 60px;">lxml: <a href="https://github.com/lxml/lxml">https://github.com/lxml/lxml</a></p>
<p style="padding-left: 60px;">bs4: <a href="https://pypi.org/project/beautifulsoup4/">https://pypi.org/project/beautifulsoup4/</a></p>
<p style="padding-left: 60px;">markdown: <a href="https://github.com/Python-Markdown/markdown">https://github.com/Python-Markdown/markdown</a></p>
<p style="padding-left: 60px;">flask-cors: <a href="https://github.com/corydolphin/flask-cors">https://github.com/corydolphin/flask-cors</a></p>
<p style="padding-left: 60px;">Pelican: <a href="https://github.com/getpelican/pelican">https://github.com/getpelican/pelican</a></p>
<p style="padding-left: 60px;">Reveal.js: <a href="https://github.com/hakimel/reveal.js/">https://github.com/hakimel/reveal.js/</a></p>
<p style="padding-left: 30px;">Leo Editor: <a href="https://github.com/leo-editor/leo-editor">https://github.com/leo-editor/leo-editor</a></p>
<p>SciTE: <a href="https://www.scintilla.org/SciTEDownload.html">https://www.scintilla.org/SciTEDownload.html</a></p>
<p>Tiny C Compiler: <a href="https://github.com/TinyCC/tinycc">https://github.com/TinyCC/tinycc</a></p>
<p>Fossil SCM: <a href="https://www.fossil-scm.org/">https://www.fossil-scm.org/</a></p>
<p>Jupyterlab: <a href="https://github.com/jupyterlab/jupyterlab">https://github.com/jupyterlab/jupyterlab</a></p>
<p>Flutter: <a href="https://github.com/flutter/flutter">https://github.com/flutter/flutter</a></p>
<p>Visual Studio Code: <a href="https://github.com/microsoft/vscode">https://github.com/microsoft/vscode</a></p>
<h3>Python</h3>
<p>Create a Portable Python:</p>
<p>Install Python 3.8.1 without pip</p>
<p><a href="https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH">PYTHONPATH</a></p>
<p><a href="https://bootstrap.pypa.io/get-pip.py">get-pip.py</a></p>
<h4>start.bat</h4>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=y
subst %Disk%: "data"

%Disk%:

set HomePath=%Disk%:\home_mdecourse
set HomeDrive=%Disk%:\home_mdecourse
set Home=%Disk%:\home_mdecourse
set USERPROFILE=%Disk%:\home_mdecourse

REM 將系統 Python 程式的 io 設為 utf-8
set PYTHONIOENCODING="utf-8"

set PYTHONPATH=%Disk%:\py38\DLLs;%Disk%:\py38\Lib;%Disk%:\py38\Lib\site-packages;
set PYTHONHOME=%Disk%:\py38

REM for flutter
set java_home=%Disk%:\java\jdk8u222-b10
set ANDROID_SDK_home=%Disk%:\home_mdecourse
set GRADLE_USER_home=%Disk%:\home_mdecourse
set ANDROID_SDK_ROOT=%Disk%:\android\sdk
set ANDROID_Home=%Disk%:\android\sdk\tools

REM for putty
set GIT_HOME=%CDisk%:\portablegit\bin\
set GIT_SSH=%Disk%:\putty\plink.exe

set path_python=%Disk%:\py38;%Disk%:\py38\Scripts;
set path_msys2=%Disk%:\msys64\mingw64\bin;
REM coreutils is for compiling fossil scm
set path_coreutils=%Disk%:\coreutils-5.3.0\bin;%Disk%:\depends22_x64;
set path_tcc=%Disk%:\tcc;
set path_cmake=%Disk%:\cmake-3.10.1-win64-x64\bin;
set path_nodejs=%Disk%:\nodejs;%Disk%:\nodejs\appdata\roaming\npm;
set path_git=%Disk%:\portablegit\bin;
set path_xming=%Disk%:\Xming;
set path_latex=%Disk%:\Pandoc;%Disk%:\TinyTeX\bin\win32;
set path_flutter=%Disk%:\java\jdk8u222-b10\bin;%Disk%:\flutter\bin;%Disk%:\Android\sdk;%Disk%:\Android\sdk\tools;%Disk%:\Android\sdk\tools\bin;%Disk%:\Android\sdk\platform-tools;%Disk%:\flutter\bin\cache\dart-sdk\bin;%Disk%:\vscode;
set path_putty=%Disk%:\putty;

path=%Disk%:;%path_python%;%path_msys2%;%path_tcc%;%path_git%;%path_cmake%;%path_coreutils%;%path_flutter%;%path_putty%;%path_latex%;%path%;

start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe

start /MIN %Disk%:\kmolScite\SciTE.exe
start /MIN %Disk%:\kmolScite\SciTE.exe

Exit</pre>
<h3>Microcontroller</h3>
<p>Login to your gm email and download </p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1mmmgiOFO-SVaj8LNID8gTWYgt6aKr6HN/view?usp=sharing">2019_ArduinoApplied.pdf</a></p>
<p style="padding-left: 30px;">and </p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1vzffEBY1HK9yY1-t5MXO1TdeoGh2BHLq/view?usp=sharing">2018_BeginningRoboticsWithRaspberry.pdf</a></p>
<h4>Arduino Simulator</h4>
<p style="padding-left: 30px;"><a href="https://www.sites.google.com/site/unoardusim/">https://www.sites.google.com/site/unoardusim/</a></p>
<h4>PIC Simulator Labortory</h4>
<p style="padding-left: 30px;"><a href="https://github.com/lcgamboa/picsimlab">https://github.com/lcgamboa/picsimlab</a></p>
<p style="padding-left: 30px;"><a href="https://lcgamboa.github.io/">https://lcgamboa.github.io/</a></p>
<p style="padding-left: 30px;"><a href="https://mplabxpress.microchip.com/mplabcloud/ide">https://mplabxpress.microchip.com/mplabcloud/ide</a></p>
<p style="padding-left: 30px;">Login to your gm account and <a href="https://drive.google.com/drive/folders/1ucVrqPEzyidXDzM6H1K4U6uhzkvTKFSd?usp=sharing">download all Microchip related tools</a>.</p>
<h4>Rasberry Pi</h4>
<p style="padding-left: 30px;"><a href="https://github.com/gavinlyonsrepo/RpiMotorLib">https://github.com/gavinlyonsrepo/RpiMotorLib</a></p>
<h4>Python-exemplary</h4>
<p style="padding-left: 30px;"><a href="http://www.python-exemplary.com/">http://www.python-exemplary.com/</a></p>
<h3>MSYS2</h3>
<p><a href="https://www.msys2.org/">https://www.msys2.org/</a></p>
<p>Y:\py38\Lib\distutils\distutils.cfg</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">[build]
compiler=mingw32

[build_ext]
compiler=mingw32</pre>
<h4>Reference</h4>
<p style="padding-left: 30px;"><a href="https://github.com/KmolYuan/pyslvs/blob/master/platform/set_pycompiler.bat">https://github.com/KmolYuan/pyslvs/blob/master/platform/set_pycompiler.bat</a></p>
<h3>Pyslvs-UI</h3>
<h4>Compile and install python_solvespace library</h4>
<p>Pyslvs-UI requires <a href="https://github.com/mdecourse/solvespace">https://github.com/mdecourse/solvespace</a> python_solvespace pyd dynamic library of the python branch.</p>
<p style="padding-left: 30px;">git clone --recurse-submodules <a href="https://github.com/mdecourse/solvespace.git">https://github.com/mdecourse/solvespace.git</a> </p>
<p style="padding-left: 30px;">cd solvespace</p>
<p style="padding-left: 30px;">git checkout python</p>
<p style="padding-left: 30px;">cd cython</p>
<p style="padding-left: 30px;">python setup.py install</p>
<h4>Compile and install Pyslvs-UI</h4>
<p style="padding-left: 30px;">git clone --recurse-submodules <a href="https://github.com/mdecourse/pyslvs-UI.git">https://github.com/mdecourse/pyslvs-UI.git</a></p>
<p style="padding-left: 30px;">cd pyslvs-UI</p>
<p style="padding-left: 30px;">python -m pip install -r requirements.txt</p>
<p style="padding-left: 30px;"><span>mingw32-make install</span></p>
<p style="padding-left: 30px;"><span></span></p>
<h1>Topics</h1>
<blockquote>
<p><span style="background-color: #ccffcc;">The products of the twenty - first century should be a sustainable service, designed to provide users with a quality of life experience.</span></p>
<p><span style="background-color: #ccffcc;">二十一世紀的產品應該是一種永續服務, 旨在為用戶提供優質的生活體驗.</span></p>
<p><span style="background-color: #ccffcc;">KMOLab</span></p>
</blockquote>
<h4>Topic 0: From Digital to Industrial + Engineering Product Design Collaboration</h4>
<p>Login to your gm email account and download</p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/open?id=1YHQwYduSMisiJQS-Jr_HhJghzIqP_SBc">DigitalProductCollaboration.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1KRwEcU7Vn65xL6twStG_EWaTKz1Ag8PG/view?usp=sharing">IndustrialAndEngineeringProductDesignCollaboration.pdf</a></p>
<p>Can we create an english-english vocabulary collection service?</p>
<p style="padding-left: 30px;"><a href="https://www.autoitscript.com/forum/files/file/419-dictionary_bigdb/">https://www.autoitscript.com/forum/files/file/419-dictionary_bigdb/</a></p>
<h4>Topic 1: Mechanical Design Process</h4>
<p>Login to your gm email account and download <a href="https://drive.google.com/file/d/13THamnfayiRT4Wa9KzmjXQSP4ZW2jIej/view?usp=sharing">MechanicalDesignProcess.pdf</a>.</p>
<p style="padding-left: 30px;">(Can we build online tools to facilitate these processes?)</p>
<p style="padding-left: 30px;">Successful Design</p>
<p style="padding-left: 30px;">Building the Design</p>
<p style="padding-left: 30px;">Structural Considerations</p>
<p style="padding-left: 30px;">Materials and Processes</p>
<h4>Topic 2: Mechatronic System Design</h4>
<p>Login to your gm email account and download <a href="https://drive.google.com/file/d/1KRb8vX_LB_3hkLwK1z1LOP8wl_StIZOR/view?usp=sharing">MSModelingAndTFApproaches.pdf</a>.</p>
<p style="padding-left: 30px;"><span>(Can we build online tools to facilitate these processes?)</span></p>
<p style="padding-left: 30px;">Mechatronic Systems</p>
<p style="padding-left: 30px;">Mathematical Modeling</p>
<p style="padding-left: 30px;">Transfer Function Approaches</p>
<p>Login to your gm email account and download <a href="https://drive.google.com/file/d/1y0QH6vI8uMymK9JI35EShVFS40Q8uwwq/view?usp=sharing">MechatronicDesignCases.pdf</a>.</p>
<p style="padding-left: 30px;">DC Motor Velocity and Position Control</p>
<p style="padding-left: 30px;">Balancing Robot Control</p>
<p style="padding-left: 30px;">Magnetic Levitation System</p>
<h4>Topic 3: Mechatronic Future and Challenges</h4>
<p><span>Login to your gm email account and download <a href="https://drive.google.com/file/d/118Vho5ECQfQ1XK_hnlptpCVdNgQ00HuZ/view?usp=sharing">MechaFutureAndChallenges.pdf</a>.</span></p>
<p style="padding-left: 30px;">Mechatronic Futures</p>
<p style="padding-left: 30px;">Mechatronics Disrupted</p>
<p style="padding-left: 30px;">Challenges in Mechatronics</p>
<p><span>Login to your gm email account and download <a href="https://drive.google.com/file/d/1AFADmyNrwprE7AesaFAecZZquIfzbLw-/view?usp=sharing">MechaEducFutureNeed.pdf</a>.</span></p>
<p style="padding-left: 30px;">Education to meet future need</p>
<p>Login to your gm email account and <a href="https://drive.google.com/drive/folders/1h2bc9HqF3yhB3BwZwJD_vPUdOPGroQtv?usp=sharing">download all reference files</a>.</p>
<h2>Mechanical Design</h2>
<p>Frontend - backend and design process</p>
<p>Frontend Dart:</p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">// 因為要使用超文件表單, 因此導入 html 程式庫
import "dart:html";

// 每一個 Dart 程式都從 main() 開始執行
main() {
  // 透過表單, 取得使用者輸入的溫度值, 語法為數字加上 C 或 F
  InputElement tempInput = querySelector("#temp");
  querySelector("#submit").onClick.listen((e) =&gt; pyconvert(tempInput.value));
}

pyconvert(String data) {
  // 準備將轉換結果顯示在 output Label 區
  LabelElement output = querySelector("#output");
  // 將 data 送到遠端 python flask 程式區
  request(data);
} // pyconvert

request(String asset) {
  var response = document.querySelector('#response');
  var url = 'http://localhost:5000/${asset}';

  HttpRequest.getString(url, onProgress: (_) =&gt; response.text = 'Loading ...')
      .then((resp) =&gt; response.setInnerHtml('&lt;pre&gt;${resp}&lt;/pre&gt;'))
      .catchError((error) =&gt; response.text = 'ERROR !!!: ${error.toString()}');
}

/* 以下為 Python Flask 伺服器端的程式碼, 可以接受 Dart 前端送來的字串, 進行溫度轉換運算後, 將結果傳回
import flask
# 導入 flask_cors 模組中的 CORS
# 目的在讓伺服器可以被遠端的 Dart 程式跨網域擷取資料
from flask_cors import CORS

app = flask.Flask(__name__)
# 讓應用程式啟動後, 可以跨網域被截取資料
CORS(app, support_credentials=False)
global data

@app.route('/', methods =['POST', 'GET'])
def root():
    if flask.request.method == 'POST': 
        data = flask.request.form['data'] 
        print(data)
        resp = {"data": data}
        output = flask.json.dumps(data)
    else:
        # 將 Python 中的 dictionary 資料透過 json 格式送出後
        # 讓遠端的 Dart 程式可以擷取
        data = {"a": 1, "b": data+"yen", "c": "字串"}
        output = flask.json.dumps(data)
    return output
    
@app.route('/&lt;name&gt;', methods=['POST', 'GET'])
def convert(name):
    #name[-1] 為字串最後一個字元
    # name[:-1] 則為數字
    if name[-1] is "F" or name[-1] is "f":
        # 表示要將華氏溫度轉為攝氏
        return FtoC(name[:-1])
    else:
        return CtoF(name[:-1])
    
#celsius = 5/9 ( fahrenheit − 32)
#定義一個 celsius 轉 fahrenheit  函式
def CtoF(c):
    return "攝氏" + c + "度=華氏" + str(round(int(c)*9/5 + 32, 2)) + "度"

#定義一個 celsius 轉 fahrenheit  函式
def FtoC(f):
    return "華氏" + f + "度=攝氏" + str(round((int(f) - 32)*5/9, 2)) + "度"


if __name__ == '__main__':
    # 內建的 Flask Web 啟動埠號為 5000
    app.run()
*/</pre>
<p>Backend Python:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import flask
# 導入 flask_cors 模組中的 CORS
# 目的在讓伺服器可以被遠端的 Dart 程式跨網域擷取資料
from flask_cors import CORS
 
app = flask.Flask(__name__)
# 讓應用程式啟動後, 可以跨網域被截取資料
CORS(app, support_credentials=False)
global data
 
@app.route('/', methods =['POST', 'GET'])
def root():
    if flask.request.method == 'POST': 
        data = flask.request.form['data'] 
        print(data)
        resp = {"data": data}
        output = flask.json.dumps(data)
    else:
        # 將 Python 中的 dictionary 資料透過 json 格式送出後
        # 讓遠端的 Dart 程式可以擷取
        data = {"a": 1, "b": data+"yen", "c": "字串"}
        output = flask.json.dumps(data)
    return output
     
@app.route('/&lt;name&gt;', methods=['POST', 'GET'])
def convert(name):
    #name[-1] 為字串最後一個字元
    # name[:-1] 則為數字
    if name[-1] is "F" or name[-1] is "f":
        # 表示要將華氏溫度轉為攝氏
        return FtoC(name[:-1])
    else:
        return CtoF(name[:-1])
     
#celsius = 5/9 ( fahrenheit − 32)
#定義一個 celsius 轉 fahrenheit  函式
def CtoF(c):
    return "攝氏" + c + "度=華氏" + str(round(int(c)*9/5 + 32, 2)) + "度"
 
#定義一個 celsius 轉 fahrenheit  函式
def FtoC(f):
    return "華氏" + f + "度=攝氏" + str(round((int(f) - 32)*5/9, 2)) + "度"
 
 
if __name__ == '__main__':
    # 內建的 Flask Web 啟動埠號為 5000
    app.run()</pre>
<p>What can these programs do to the mechanical design process?</p>
<p style="padding-left: 30px;"><a href="https://flutter.dev/">Flutter</a> mobile frontend and Python backend?</p>
<p style="padding-left: 30px;">Learning Python?</p>
<p style="padding-left: 60px;">Login to gm account and download</p>
<p style="padding-left: 90px;"><a href="https://drive.google.com/file/d/17_LCSvwgtnIG8FnpezfUlEdbo3Y6G6CP/view?usp=sharing">2019_ABeginnersGuideToPython3Programming.pdf</a></p>
<p style="padding-left: 90px;">and</p>
<p style="padding-left: 90px;"><a href="https://drive.google.com/file/d/1z6v5j4TtFwBmo00URNpBBoLfQVmlTSZv/view?usp=sharing">2019_AdvancedGuideToPython3Programming.pdf</a></p>
<p style="padding-left: 30px;">Learning Dart and Flutter?</p>
<p style="padding-left: 60px;">Login to gm account and download </p>
<p style="padding-left: 90px;"><a href="https://drive.google.com/file/d/1RyCFxXrh0skRAWafX7nyYFVHuMO68iTS/view?usp=sharing">2020_ QuickStartGuideToDartProgramming.pdf</a></p>
<p style="padding-left: 90px;">and</p>
<p style="padding-left: 90px;"><a href="https://drive.google.com/file/d/1RyCFxXrh0skRAWafX7nyYFVHuMO68iTS/view?usp=sharing">2019_BeginningAppDevelopmentWithFlutter.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://flutter.dev/">Flutter</a> mobile frontend, Python backend and <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> through <a href="https://www.coppeliarobotics.com/helpFiles/en/remoteApiOverview.htm">remote API</a>?</p>
<p style="padding-left: 30px;"><a href="https://flutter.dev/">Flutter</a> mobile frontend, <a href="https://cython.org/">Cython</a> backend and <a href="https://github.com/solvespace/solvespace">Solvespace</a> through <a href="https://github.com/KmolYuan/solvespace/tree/python">Python Geometric Constranin Solver</a>?</p>
<p style="padding-left: 60px;">Learning C++?</p>
<p style="padding-left: 90px;">Login to gm account and download <a href="https://drive.google.com/file/d/1KZCqddCxs1CCK-thaYpM1ssuz3nMNn3t/view?usp=sharing">2018_Book_BeginningC17.pdf</a>.</p>
<p style="padding-left: 90px;">Also check into <a href="https://www.msys2.org/">MSYS2</a> for reference.</p>
<p style="padding-left: 30px;">Where can we save the data during a web/mobile frontend and backend based design process?</p>
<p style="padding-left: 60px;">Login to gm account and download</p>
<p style="padding-left: 90px;"><a href="https://drive.google.com/file/d/1u3PHIbGWz3r4bct_molJg8FODkS8tf02/view?usp=sharing">2019_BuildingRESTAPIsWithFlask.pdf</a> </p>
<p style="padding-left: 90px;">and</p>
<p style="padding-left: 90px;"><a href="https://drive.google.com/file/d/1REP4GKqo_RkLmPj2MqiuG-YR59TTqHPF/view?usp=sharing">2010_TheDefinitiveGuideToSQLite.pdf</a></p>
<p style="padding-left: 60px;">Also check into <a href="https://github.com/chiamingyen/pygrouf">https://github.com/chiamingyen/pygrouf</a>, <a href="https://github.com/mdecourse/wcms-scrum1">https://github.com/mdecourse/wcms-scrum1</a> and <a href="https://wcms-scrum1.herokuapp.com/gear_index">https://wcms-scrum1.herokuapp.com/gear_index</a> for reference.</p>
<h4>Recall application of <a href="https://www.google.com/search?q=pro%2Fweblink">Pro/Weblink</a></h4>
<p>Take <a href="https://support.ptc.com/help/creo/creo_pma/usascii/index.html#page/fundamentals/fundamentals/fund_three_sub/About_Pro_Web_Link.html">Pro/Weblink</a> as an example. Javascript is used as the frontend working with a local host Pro/Engineer under the trusted Internet Explorer environment to enable programmable 3d mechanical Part and Assembly processes.</p>
<p>Download <a href="https://drive.google.com/file/d/1CKB_lZ0ujiUC3zx2juRACUJaA8VCAHhW/view?usp=sharing">2002_ProEweblinkUserGuide.pdf</a></p>
<h3>Topic1Author</h3>
<p>Login to your gm account and download <a href="/get_page/ME%20Credentials/2019_DesigningElectronicProductEnclosures.pdf">2019_DesigningElectronicProductEnclosures.pdf</a> (where the topic1 material taken from)</p>
<h4>Author’s Credentials</h4>
<p>By listing some of the corporations where I have worked, this should provide some background on where my experience comes from.</p>
<h4><a href="https://www.lincolnelectric.com/">Lincoln Electric Company</a></h4>
<p>I started in the drafting room running blue prints in 1964. By taking night school classes in drafting, I soon was given the chance to apprentice as a tool and die designer where I got experience in the basic skills of designing jigs and fixtures. Lincoln Electric is "world famous" for their profit sharing program and work ethic. (I would later teach beginning drafting at Chabot College, California, in 1980).</p>
<h4><a href="https://www.llnl.gov/">Lawrence Livermore National Laboratory</a></h4>
<p>My first job after getting my master’s degree in mechanical engineering (from the University of Arizona, 1977) was in the Material Fabrication Group. Our mission to design and build a lathe capable of 0.000001 inch accuracy provided great experience. Additional experience in the design of experiments for laboratory programs proved invaluable for future work.</p>
<h4><a href="https://www.intel.com/content/www/us/en/homepage.html">Intel Corporation</a></h4>
<p>This is my first experience with the design of computer housings for "silicon valley." Intel was just expanding beyond chips and printed circuit board products, and they had plans to get into building computer systems. I’m on the cover of "Intel News" shown trying to measure fan noise of a prototype "tower computer" in 1982. I was very fortunate to experience the tremendous work ethic in the culture at Intel.</p>
<h4><a href="https://en.wikipedia.org/wiki/Sytek_Inc">Sytek Corporation</a></h4>
<p>This is my first design position where I had the responsibility of taking my own design thru all the stages of prototyping, tooling, testing, and manufacturing delivery. We installed our first CAD systems (CADAM) in 1986.</p>
<p>This is the first company where I assumed some management responsibility and thus saw a more complete picture of where (mechanical) product design fits into a larger picture of the entire product delivery process.</p>
<h4><a href="https://www.trimble.com/">Trimble Navigation Limited</a></h4>
<p>This is my first designer position where I designed and documented with a CAD system (AutoCAD).</p>
<p>My work here spanned nearly 25 years from 1988 thru 2013. We installed our first 3D CAD system (ProEngineer) in 1992. Trimble’s products (portable GPS instruments) are intended to work in outdoor environments, and their customers need these products to function under adverse conditions (shock, vibration, temperature extremes, rain).</p>
<p>I spent my early years in the Marine Division, moved on to the Survey Division, and became manager of a Mechanical Engineering Group in 1995. While manager, I was responsible for budgeting, resourcing, prioritization, design, and documentation. I also served as (overall) project manager on a number of projects and thus experienced how the "mechanical piece" fits into the overall design of products.<br/> <br/>All of the above corporations had different accepted working processes for overall product design and different corporate cultures to operate in. It’s hoped that most of the words written here serve as a valuable contribution to the reader’s design process regardless of the corporate cultures they are in. The above work resume certainly spans<br/>a history of both how computers came to be used in the design process and how the industries evolved in their design processes. The design tools and products made for the marketplace will continue to evolve in the future, but we will still need basic mechanical design fundamentals to positively affect the overall product design process.</p>
<h1>Assignments</h1>
<h4>Assignment 1:</h4>
<p><span style="background-color: #ffff00;">Due March 25, 2020</span> for class 2a and <span style="background-color: #ffff00;">March 26, 2020</span> for class 2b.</p>
<p style="padding-left: 30px;">1. Describe how to do an efficient random grouping for this course or do the roll calling randomly?</p>
<p style="padding-left: 30px;">2. Describe how to prepare a portable Python programming system for Windows 10 64bit system to allow one the maintain <a href="https://github.com/mdecourse/cmsimde">CMSiMDE</a> website, <a href="https://github.com/getpelican/pelican">Pelican blog</a> and <a href="https://github.com/hakimel/reveal.js/">Reveal.js</a> presentation on <a href="https://github.com/">Github</a>?</p>
<p style="padding-left: 30px;">3. What do you need to know from <a href="http://www.coppeliarobotics.com/helpFiles/index.html">http://www.coppeliarobotics.com/helpFiles/index.html</a> to implement a four-wheeled robot?</p>
<h4><span>Assignment 2:</span></h4>
<p><span><span><span style="background-color: #ffff00;">Due April 22, 2020</span> for class 2a and <span style="background-color: #ffff00;">April 23, 2020</span> for class 2b.</span></span></p>
<p style="padding-left: 30px;"><span><span>1. According to the material of Topic 0 and Topic 1, can you describe specifically what the mechanical design team need to do for accomplishing Assignment 1's  four wheeled robot.</span></span></p>
<p style="padding-left: 30px;"><span>2. What do you need to know from <a href="https://cyberbotics.com/doc/guide/index">https://cyberbotics.com/doc/guide/index</a> <span> to implement a four-wheeled robot?</span></span></p>
<h4>W9: Midterm presentation</h4>
<h4><span>Assignment 3:</span></h4>
<p><span><span>Due <span style="background-color: #ffff00;">May 27, 2020</span> for class 2a and <span style="background-color: #ffff00;">May 28, 2020</span> for class 2b.</span></span></p>
<p style="padding-left: 30px;">According to the reading of Topic 2 and Topic 3, propose a Mechatronic project by using <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> or <a href="https://cyberbotics.com/">Webots</a> and <a href="https://www.onshape.com/">Onshape</a>.</p>
<h4>Final project:</h4>
<p><span style="background-color: #ffff00;">Due June 24, 2020.</span></p>
<p style="padding-left: 30px;">Realize your Mechatronic project and conclude with a presentation video and pdf report.</p>
<h1>Reference</h1>
<h2>Dart</h2>
<p><a href="https://flutter.dev/docs/reference/tutorials">https://flutter.dev/docs/reference/tutorials</a></p>
<p><a href="https://www.raywenderlich.com/4529993-getting-started-with-flutter">https://www.raywenderlich.com/4529993-getting-started-with-flutter</a></p>
<p><a href="https://www.raywenderlich.com/flutter/">https://www.raywenderlich.com/flutter/</a></p>
<p><a href="https://github.com/SpinlockLabs/github.dart">https://github.com/SpinlockLabs/github.dart</a></p>
<p><a href="https://book.flutterchina.club/">https://book.flutterchina.club/</a></p>
<p><a href="https://github.com/CarGuo/gsy_flutter_book">https://github.com/CarGuo/gsy_flutter_book</a></p>
<p><a href="https://www.youtube.com/playlist?list=PLV2Iw811jLpWdAHToUqTuWYhYbjVfwS80">https://www.youtube.com/playlist?list=PLV2Iw811jLpWdAHToUqTuWYhYbjVfwS80</a></p>
<p><a href="https://flutterbyexample.com/">https://flutterbyexample.com/</a></p>
<h2>SQLite</h2>
<p>Build iOS Database Apps with Swift and SQLite (2016)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-2232-4">https://link.springer.com/book/10.1007/978-1-4842-2232-4</a></p>
<p>Introducing SQLite for Mobile Developers (2015)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-1766-5">https://link.springer.com/book/10.1007/978-1-4842-1766-5</a></p>
<p>The Definitive Guide to SQLite (2010)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4302-3226-1">https://link.springer.com/book/10.1007/978-1-4302-3226-1</a></p>
<h4>SQLite3 and C:</h4>
<h4 style="padding-left: 30px;">Compiled with <a href="https://www.msys2.org/">MSYS2</a> and <a href="https://packages.msys2.org/package/mingw-w64-x86_64-sqlite3">SQLite3</a>:</h4>
<p style="padding-left: 30px;">gcc sqlite_ex.c -lsqlite3 -o sqlite_ex.exe</p>
<p style="padding-left: 30px;">sqlite_ex.c query vocabulary from <a href="https://github.com/mdecourse/lookupdict/blob/master/webster_vocabulary.sqlite">https://github.com/mdecourse/lookupdict/blob/master/webster_vocabulary.sqlite</a></p>
<h4><span>sqlite_ex.c source code:</span></h4>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;sqlite3.h&gt;
#include &lt;stdio.h&gt;

int callback(void *, int, char **, char **);

int main(void) {
    
    sqlite3 *db;
    char *err_msg = 0;
    
    int rc = sqlite3_open("webster_vocabulary.sqlite", &amp;db);
    
    if (rc != SQLITE_OK) {
        
        fprintf(stderr, "Cannot open database: %s\n", 
                sqlite3_errmsg(db));
        sqlite3_close(db);
        
        return 1;
    }
    
    char *sql = "SELECT * FROM word where word='ABORT'";
        
    rc = sqlite3_exec(db, sql, callback, 0, &amp;err_msg);
    
    if (rc != SQLITE_OK ) {
        
        fprintf(stderr, "Failed to select data\n");
        fprintf(stderr, "SQL error: %s\n", err_msg);

        sqlite3_free(err_msg);
        sqlite3_close(db);
        
        return 1;
    } 
    
    sqlite3_close(db);
    
    return 0;
}

int callback(void *NotUsed, int argc, char **argv, 
                    char **azColName) {
    
    NotUsed = 0;
    
    for (int i = 0; i &lt; argc; i++) {

        printf("%s = %s\n", azColName[i], argv[i] ? argv[i] : "NULL");
    }
    
    printf("\n");
    
    return 0;
}</pre>
<h4>SQLite3 and Python:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/wcms-scrum1">https://github.com/mdecourse/wcms-scrum1</a></p>
<h4>SQLite3 and Dart:</h4>
<h4 style="padding-left: 30px;">dart:ffi only for mobile and desktop</h4>
<p style="padding-left: 60px;">from <a href="https://www.sqlite.org/download.html">https://www.sqlite.org/download.html</a> download C source code as an amalgamation</p>
<p style="padding-left: 60px;">use <a href="https://www.msys2.org/">MSYS2</a>:</p>
<p style="padding-left: 90px;">gcc -shared sqlite3.c -o sqlite3.dll</p>
<p style="padding-left: 60px;">to get sqlite3.dll</p>
<p style="padding-left: 60px;">use git sparse-checkout from <a href="https://github.com/dart-lang/sdk">https://github.com/dart-lang/sdk</a> get</p>
<p style="padding-left: 60px;"><a href="https://github.com/dart-lang/sdk/tree/master/samples/ffi/sqlite">https://github.com/dart-lang/sdk/tree/master/samples/ffi/sqlite</a></p>
<p style="padding-left: 90px;">cd y:\tmp<br/>mkdir dart_sqlite<br/>cd dart_sqlite<br/>git init<br/>git config core.sparsecheckout true<br/>git remote add -f origin https://github.com/dart-lang/sdk.git<br/>echo samples/ffi/sqlite &gt;&gt; .git/info/sparse-checkout<br/>git pull origin master</p>
<p style="padding-left: 60px;">cd y:\tmp\<span>samples\ffi\sqlite</span></p>
<p style="padding-left: 60px;"><span>pub get</span></p>
<p style="padding-left: 60px;"><span>copy sqlite3.dll and <a href="https://github.com/mdecourse/lookupdict/blob/master/webster_vocabulary.sqlite">webster_vocabulary.sqlite</a> into y:\tmp\<span>samples\ffi\sqlite\example</span></span></p>
<h4 style="padding-left: 60px;"><span><span>use SciTE to execute main.dart:</span></span></h4>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">import "../lib/sqlite.dart";

void main() {
  Database d = Database("webster_vocabulary.sqlite");

  Result result = d.query("select * from word where word='ABORT';");
  for (Row r in result) {
    //String name = r.readColumnByIndex(1);
    String word = r.readColumn("word");
    String defn = r.readColumn("defn");
    //print("$name $word $defn");
    print("單字:$word 解說: $defn");
  }
  d.close();
}
</pre>
<h4 style="padding-left: 30px;"><a href="https://pub.dev/packages/js">package:js</a> is for web</h4>
<p style="padding-left: 60px;"><a href="https://github.com/simolus3/moor/blob/master/moor/lib/src/web/sql_js.dart">https://github.com/simolus3/moor/blob/master/moor/lib/src/web/sql_js.dart</a></p>
<p>References:</p>
<p style="padding-left: 30px;"><a href="https://pub.dev/packages/f_orm_m8_sqlite">https://pub.dev/packages/f_orm_m8_sqlite</a></p>
<p style="padding-left: 30px;"></p>
<p style="padding-left: 60px;"></p>
<h2>Fossil SCM</h2>
<p><a href="https://www.fossil-scm.org/">https://www.fossil-scm.org/</a></p>
<h2>Jupyterlab</h2>
<p><a href="https://github.com/jupyterlab/jupyterlab">https://github.com/jupyterlab/jupyterlab</a></p>
<h2>AI</h2>
<p><a href="https://artint.info/2e/html/ArtInt2e.html">https://artint.info/2e/html/ArtInt2e.html</a></p>
<p><a href="https://github.com/SullyChen/Autopilot-TensorFlow">https://github.com/SullyChen/Autopilot-TensorFlow</a></p>
<p><a href="https://towardsdatascience.com/how-a-high-school-junior-made-a-self-driving-car-705fa9b6e860">https://towardsdatascience.com/how-a-high-school-junior-made-a-self-driving-car-705fa9b6e860</a></p>
<p><a href="https://github.com/UvinduW/RCAutopilot">https://github.com/UvinduW/RCAutopilot</a></p>
<h1>每週進度</h1>
<h2>w2</h2>
<p><em><strong>python 3.8.2</strong></em></p>
<p><img alt="" height="405" src="/images/2020-04-06_21-18-59.png" width="720"/></p><h2>w3</h2>
<p><em><strong>了解四輪機器人</strong></em></p>
<p>翻譯的網址:<a href="https://www.coppeliarobotics.com/helpFiles/index.html">https://www.coppeliarobotics.com/helpFiles/index.html</a></p>
<p>翻譯</p>
<p>路徑位置和長度計算方法<span>(Path position and length calculation methods)</span></p>
<p>沿著路徑對象，可以定義固有位置。該位置（也稱為路徑位置）與路徑對象的位置不同。雖然路徑對象的位置是路徑對象原點的位置（在選擇路徑時顯示為白色線框立方體），但是路徑位置或固有路徑位置是沿路徑的位置值</p>
<p>路徑的<span>Bezier</span>點可以是不同的，也可以是重合的：想像一個焊接機器人，其末端執行器是焊接設備的尖端；在兩個連續的<span>Bezier</span>點之間，末端執行器可以：</p>
<p>在不改變方向的情況下執行平移（即沿著直線）（兩個<span>Bezier</span>點是不同的，但方向相同）。</p>
<p>執行平移並更改方向（兩個<span>Bezier</span>點是不同的，並且方向不同）。</p>
<p>在不改變位置的情況下執行旋轉（即更改方向）（兩個<span>Bezier</span>點重合但方向不同）。</p>
<p>此外，在某些情況下，我們希望焊炬遵循預定的路徑，在某個特定位置暫停（例如，處理較大的焊接點），然後沿該路徑繼續前進。為了正確處理上述<span>3</span>種情況和特殊的暫停情況，重要的是能夠唯一地識別沿路徑（即路徑位置<span>*</span>）的任何位置<span>*</span>（廣義上的位置）以及路徑長度<span>*</span>（從更廣泛的意義上講是長度）。為此，用戶可以選擇幾種位置計算方法：<span> </span></p>
<p>路徑位置<span>*</span>被描述為沿路徑的累積線性變化。路徑長度<span>*</span>由下式給出：<img alt="" height="24" src="/images/公式1.jpg" width="92"/></p>
<p>路徑位置<span>*</span>被描述為沿路徑的累積角度<span>**</span>變化。路徑長度<span>*</span>由下式給出：<img alt="" height="24" src="/images/公式2.jpg" width="107"/></p>
<p>路徑位置<span>*</span>被描述為沿路徑的累積（線性變化<span>+</span>角度<span>**</span>變化）。路徑長度<span>*</span>由下式給出：<img alt="" height="24" src="/images/公式3.jpg" width="139"/></p>
<p>路徑位置<span>*</span>被描述為沿路徑的累積最大值（線性變化，角度<span>**</span>變化）。路徑長度<span>*</span>由下式給出：<img alt="" height="24" src="/images/公式4.jpg" width="169"/></p>
<p>路徑位置<span>*</span>被描述為沿路徑的累積（線性變化，如果不為零，否則為角度<span>**</span>）。路徑長度<span>*</span>由下式給出：<img alt="" height="24" src="/images/公式5.jpg" width="328"/></p>
<p>路徑位置<span>*</span>被描述為沿路徑的累積（角度<span>**</span>變化，如果不為零，否則為線性變化）。路徑長度<span>*</span>由下式給出：<img alt="" height="24" src="/images/公式6.jpg" width="347"/></p>
<p>路徑位置<span>*</span>被描述為沿路徑的（線性變化，角度<span>**</span>變化）的累積歐幾里德距離。路徑長度<span>*</span>由下式給出：<img alt="" height="24" src="/images/公式7.jpg" width="145"/></p>
<p>其中Δ<span>l</span>和Δα分別是兩個連續的<span>Bezier</span>點之間的線性和角度變化。角度<span>**</span>變化是規則角度變化乘以角度係數<span>c</span>。<span> c</span>稱為角度到線性的轉換係數，並且可以將角度值和線性值組合在一起。這意味著沿路徑的位置<span>*</span>或路徑長度<span>*</span>始終以線性單位（例如米）給出，而與上面選擇的位置計算方法無關。</p>
<p><span> </span>默認情況下，紅色標記的項為零。該術語可以看作是<span>Bezier</span>點（或路徑控制點）的虛擬距離或第四坐標（即每個<span>Bezier</span>點將由方向和位置（<span>x</span>，<span>y</span>，<span>z</span>，<span>w</span>）定義，其中<span>w</span>是第四坐標）。這對於沿路徑歸檔暫停點很有用。是兩個連續的<span>Bezier</span>點之間的虛擬距離變化。<span> d</span>是虛擬距離變化的比例因子（例如，如果<span>d</span>加倍，則所有暫停點的暫停持續時間將是兩倍）。為簡化起見，在以下內容中我們將不再提及該術語並將其設為零。</p>
<p>以下示例闡明了位置和長度計算概念：</p>
<p><img alt="" height="256" src="/images/計算1.jpg" width="600"/></p>
<p><img alt="" height="220" src="/images/計算2.jpg" width="450"/></p>
<p><img alt="" height="205" src="/images/計算3.jpg" width="600"/></p>
<p><img alt="" height="192" src="/images/計算4.jpg" width="450"/></p>
<p>要歸檔沿路徑的特定點處的運動暫停，請執行以下操作：創建3個相同的路徑控制點（位置和方向完全重合），並為中間控制點指定一個虛擬距離值，該值不得為零。在下面的示例中，在3個重合點的虛擬距離為2（在第一和中間重合控制點之間為1，在中間和第三重合控制點之間為1）。如果某個對像以每秒1米的速度沿路徑行進，則它將在重合的控制點處記錄2秒的暫停</p>
<p><img alt="" height="213" src="/images/計算5.jpg" width="285"/></p>
<p></p>
<p>沿路徑運動<span>(Movement along a Path)</span></p>
<p>當前固有路徑位置在路徑上顯示為紅色球形（如果啟用了路徑位置顯示）。在模擬過程中，可以隨時使用<span>sim.setPathPosition</span>來控制球沿路徑的位置。確保了解如何計算路徑位置或路徑長度。</p>
<p>要實際使對象沿路徑移動，首先需要將對象附加到虛擬對象，然後分配虛擬對像以遵循路徑位置（帶有可選的偏移量）。</p>
<p>導入和導出路徑<span>(Importing and exporting paths)</span></p>
<p>路徑導入<span>/</span>導出功能可在<span>CSV</span>文件（逗號分隔值）上運行，該<span>CSV</span>文件可以用簡單的文本編輯器創建或讀取，但也可以輕鬆地導入<span>/</span>導出到<span>Microsoft Excel</span>等應用程序中。</p>
<p>導入路徑</p>
<p><span>CoppeliaSim</span>的導入功能（<span>[</span>菜單欄<span>-&gt;</span>文件<span>-&gt;</span>導入<span>-&gt; CSV</span>的路徑<span>...]</span>）逐行讀取值，其中每行對應一個控制點。每行應採用以下格式設置：<span> </span></p>
<p><span>x</span>，<span>y</span>，<span>z</span>，<span>alpha</span>，<span>beta</span>，<span>gamma</span>，<span>relativeVelocity</span>，<span>BezierPointCount</span>，<span>interpolationFactor1</span>，<span>interpolationFactor2</span>，</p>
<p><span>virtualDistance</span>，<span>auxiliaryFlags</span>，<span>auxiliaryChannel1</span>，<span>auxiliaryChannel2</span>，<span>auxiliaryChannel3</span>，<span>auxiliaryChannel4</span></p>
<p>其中內容相對應的意思：</p>
<p><span> </span>（<span>x</span>，<span>y</span>，<span>z</span>）表示控制點在<span>METERS</span>中的位置</p>
<p>（α，β，γ）表示控制點的方向，以度數表示為歐拉角。默認值為（<span>0,0,0</span>）。</p>
<p>相對速度已棄用。設為<span>1.0</span></p>
<p><span>BezierPointCount</span>是控制點所需的<span>Bezier</span>點數。默認值為<span>1</span>。</p>
<p><span>InterpolationFactor1</span>和<span>InterpolationFactor2</span>是在路徑控制點和<span>Bezier</span>點部分中描述的插值因子。默認值為<span>0.5</span></p>
<p><span>VirtualDistance</span>：虛擬距離值，添加到該控制點位置的路徑長度上，另請參見路徑位置或路徑長度計算方法。默認值為<span>0.0</span></p>
<p>輔助標誌：可以用於各種目的的標誌，可以通過<span>sim.getDataOnPath</span>函數進行查詢。默認值為<span>0</span>。</p>
<p>輔助通道<span>1-4</span>：可以用於各種目的的值，可以通過<span>sim.getDataOnPath</span>函數進行查詢。默認值為<span>0.0</span></p>
<p>除了前三個值（控制點位置坐標）外，所有其他值都可以省略，在這種情況下，將應用默認值。</p>
<p>導出路徑</p>
<p>通過選擇路徑，然後單擊<span>[</span>菜單欄<span>-&gt;</span>文件<span>-&gt;</span>導出<span>-&gt;</span>選定路徑為<span>CSV ...]</span>，可以導出路徑的控制點。在這種情況下，導出格式與前面描述的路徑導入格式相同。</p>
<p>也可以通過選擇路徑，然後單擊<span>[</span>菜單欄<span>-&gt;</span>文件<span>-&gt;</span>導出<span>-&gt;</span>所選路徑的<span>Bezier</span>曲線為<span>CSV ...]</span>來導出路徑的<span>Bezier</span>點。在這種情況下，創建的文件（導出的文件）中的每一行都對應一個<span>Bezier</span>點，並包含以下值：</p>
<p><span> </span><span>x</span>，<span>y</span>，<span>z</span>，<span>alpha</span>，<span>beta</span>，<span>gamma</span>，相對速度，虛擬距離，輔助標記，輔助通道<span>1</span>，輔助通道<span>2</span>，assistantChannel3，auxiliaryChannel4</p>
<p>路徑編輯模式<span>(Path edit mode)</span></p>
<p>初步說明：路徑編輯模式是一種方便且功能齊全的編輯路徑對象的方法。但是，可以在不進入用於最小化路徑修改的路徑編輯模式的情況下移動和擦除單個路徑點（選擇單個路徑點時，請確保沒有選擇除路徑之外的其他對象）。</p>
<p>可以通過單擊相應的工具欄按鈕來訪問路徑編輯模式：</p>
<p><span><img alt="" height="37" src="/images/路徑編輯一.jpg" width="38"/> </span></p>
<p><span>[</span>路徑編輯模式工具欄按鈕<span>]</span></p>
<p><span> </span>上面的工具欄按鈕僅在選擇路徑後才有效。在路徑編輯模式下，窗口中通常顯示場景層次結構的部分用於將路徑控制點顯示為列表。可以使用鼠標選擇列表中的項目，就像在層次結構窗口中的對像一樣。</p>
<p><img alt="" height="478" src="/images/路徑編輯二.jpg" width="600"/></p>
<p><span>[</span>路徑編輯模式<span>]</span></p>
<p><span> </span>現在可以像常規對像一樣選擇單個控制點。最後選擇的控制點以白色顯示，其他選擇的控制點以黃色顯示，未選擇的控制點以藍色顯示。以類似的方式，可以使用鼠標直接平移控制點，方法是使用工具欄的對象<span>/</span>項目平移工具欄按鈕在與視圖方向垂直的平面中平移所選的控制點：</p>
<p><span><img alt="" height="37" src="/images/路徑編輯三.jpg" width="38"/> </span></p>
<p><span>[</span>對象<span>/</span>項目翻譯工具欄按鈕<span>]</span></p>
<p><span> </span>在路徑編輯模式下，將顯示路徑編輯模式對話框：</p>
<p><span> <img alt="" height="478" src="/images/路徑編輯四.jpg" width="396"/></span><span> </span></p>
<p><span>[</span>控制點屬性對話框<span>]</span></p>
<p><span> </span>路徑已關閉：如果選中，則路徑的最後一個控制點將鏈接到其第一個控制點，以關閉路徑並使其循環運行。閉合路徑至少需要<span>3</span>個控制點。</p>
<p>路徑是平坦的：如果選中，則所有控制點（以及隨後的所有<span>Bezier</span>點）都將約束到路徑對象的本地參考系的<span>z = 0</span>平面。</p>
<p>自動定向：如果啟用，則將自動計算所有控制點和貝塞爾曲線點的定向，以使該點的<span>z</span>軸沿著路徑，其<span>y</span>軸指向其曲率向外（如果啟用了<span>x up</span>，則<span>y -</span>軸沒有特別限制）。如果禁用，則用戶確定控制點的方向，貝塞爾曲線點的方向將從路徑的控制點的方向內插。</p>
<p>保持<span>x</span>向上：如果選中，則自動定向功能將使每個<span>Bezier</span>點的<span>z</span>軸沿路徑對齊，並使其<span>x</span>軸沿路徑對象的<span>z</span>軸指向。</p>
<p>清除選擇：清除控制點的選擇。</p>
<p>反轉選擇：反轉控制點的選擇狀態。</p>
<p>製作虛擬對象：在選擇控制點的位置生成虛擬對象。</p>
<p>貝塞爾曲線插值因子<span>1/2</span>：有關詳細信息，請參見控制點和貝塞爾曲線部分。</p>
<p>貝塞爾曲線點數：有關詳細信息，請參見控制點和貝塞爾曲線部分。</p>
<p>虛擬距離：有關詳細信息，請參見關於沿路徑運動的部分。</p>
<p>輔助標誌：可以用於各種目的的標誌，可以通過<span>sim.getDataOnPath</span>函數進行查詢。</p>
<p>輔助通道<span>1-4</span>：可以用於各種目的的值，可以通過<span>sim.getDataOnPath</span>函數進行查詢。</p>
<p>為了精確定位控制點，請使用坐標和變換對話框。如果要編輯控制點的方向，請確保禁用路徑的“自動方向”選項（默認情況下啟用該選項）。</p>
<p>常規鍵組合（即<span>ctrl-c</span>，<span>ctrl-v</span>，<span>delete</span>和<span>ctrl-x</span>）支持複製<span>/</span>粘貼<span>/</span>刪除<span>/</span>剪切操作。確保主視圖具有焦點，以便按鍵起作用。如果未選擇任何控制點，則黏貼操作會將復制的控制點黏貼到控制點列表的開頭，否則將黏貼到選定的控制點之後（確保不超過一個控制點）。在此階段選擇）。也可以通過彈出菜單或通過<span>[</span>主菜單<span>-&gt;</span>編輯<span>]</span>訪問相同的複制<span>/</span>黏貼<span>/</span>刪除<span>/</span>剪切功能。其他操作包括：</p>
<p>在路徑的開頭插入新的路徑點<span>/</span>選擇後插入新的路徑點：如果未選擇任何控制點，則在路徑的開頭插入新的控制點；否則，在當前選擇之後插入新的控制點（請確保沒有其他內容）在這種情況下，選擇一個控制點）。</p>
<p>從貝塞爾曲線創建新路徑：使用當前路徑的貝塞爾點生成一個新的路徑對象，即新路徑的控制點將為當前路徑的貝塞爾點。</p>
<p>超頻樹<span>(OC trees)</span></p>
<p><span>OC</span>樹是代表空間分區的對象。它由樹形數據結構組成，其中每個節點正好具有八個子代。佔用的葉節點表示為體素。<span> OC</span>樹可用於為形狀或點雲提供簡化的表示，或者可充當佔用網格<span>/</span>空間：</p>
<p><span><img alt="" height="393" src="/images/樹木3.jpg" width="527"/> </span></p>
<p><span>OC</span>樹是可碰撞，可測量和可檢測的對象。這意味著<span>OC</span>樹：</p>
<p>可用於與其他可碰撞對象的碰撞檢測。</p>
<p>可與其他可測量對像一起用於最小距離計算。</p>
<p>可以被接近傳感器檢測到。</p>
<p><span>OC</span>樹可以使用<span>[</span>菜單欄<span>-&gt;</span>添加<span>-&gt; OC</span>樹<span>]</span>添加到場景中，並通過<span>OC</span>樹屬性進行編輯。</p>
<p><span>CoppeliaSim</span>中可用的<span>OC</span>樹計算（即碰撞，距離和接近傳感器計算）也可以通過<span>Coppelia</span>幾何例程作為獨立例程使用。</p>
<p><span> </span><span>OC</span>樹屬性<span>(OC tree properties)</span></p>
<p><span>OC</span>樹屬性是場景對象屬性對話框的一部分，該對話框位於<span>[</span>菜單欄<span>-&gt;</span>工具<span>-&gt;</span>場景對象屬性<span>]</span>。您還可以通過雙擊場景層次結構中的對像圖標或單擊其工具欄按鈕來打開對話框：</p>
<p><span><img alt="" height="37" src="/images/樹木1.jpg" width="38"/> </span></p>
<p><span>[</span>場景對象屬性工具欄按鈕<span>]</span></p>
<p><span> </span>在場景對象屬性對話框中，單擊<span>OC</span>樹按鈕以顯示<span>OC</span>樹對話框（僅當最後選擇的是<span>OC</span>樹時才會顯示<span>OC</span>樹按鈕）。該對話框顯示最後選擇的<span>OC</span>樹的設置和參數：</p>
<p><span><img alt="" height="342" src="/images/樹木2.jpg" width="380"/> </span></p>
<p><span>[OC</span>樹對話框<span>]</span></p>
<p><span> </span>體素大小：<span>OC</span>樹體素的大小。大小越小，用於<span>OC</span>樹數據結構的內存就越大。</p>
<p>插入選定的可見對象：允許基於選定的可見對象插入體素。僅考慮虛擬對象，形狀，超頻樹和點雲。選擇要插入的所有對象，然後最後選擇目標<span>OC</span>樹對象。</p>
<p>減去選定的可見對象：允許基於選定的可見對象刪除體素。僅考慮虛擬對象，形狀，超頻樹和點雲。選擇要插入的所有對象，然後最後選擇目標<span>OC</span>樹對象。</p>
<p>清除<span>OC</span>樹：從<span>OC</span>樹中刪除所有體素。</p>
<p>體素具有隨機顏色：每個體素將具有隨機顏色。</p>
<p>顯示<span>OC</span>樹結構：顯示<span>OC</span>樹數據結構，主要用於調試目的。</p>
<p>顏色是自發光的：體素將以自發光的顏色顯示。</p>
<p>顯示點而不是體素：對於包含大量體素的<span>OC</span>樹，顯示可能會很慢。在這種情況下，您可以顯示像素體素，而不是立方體素。</p>
<p>調整下一次插入的顏色：允許選擇新的顏色，該顏色將用於新的體素插入。<span><br/> <br/> </span></p>
<p>點雲<span>(Point clouds)</span></p>
<p>點雲是充當基於<span>OC</span>樹的點容器的對象：</p>
<p><span> <img alt="" height="416" src="/images/雲3.jpg" width="599"/></span></p>
<p>點雲是可碰撞，可測量和可檢測的對象。這意味著點雲：</p>
<p>可用於與其他基於體積的可碰撞對象（例如<span>OC</span>樹）的碰撞檢測。</p>
<p>可與其他可測量對像一起用於最小距離計算。</p>
<p>可以被接近傳感器檢測到。</p>
<p>可以使用<span>[</span>菜單欄<span>-&gt;</span>添加<span>-&gt;</span>點雲<span>]</span>將點雲添加到場景，並通過點雲屬性進行編輯。</p>
<p><span>CoppeliaSim</span>中可用的點雲計算（即碰撞，距離和接近傳感器計算）也可以通過<span>Coppelia</span>幾何例程作為獨立例程使用。</p>
<p><span> </span>點雲屬性<span>(Point cloud properties)</span></p>
<p>點雲屬性是場景對象屬性對話框的一部分，該對話框位於<span>[</span>菜單欄<span>-&gt;</span>工具<span>-&gt;</span>場景對象屬性<span>]</span>。您還可以通過雙擊場景層次結構中的對像圖標或單擊其工具欄按鈕來打開對話框：</p>
<p><span> <img alt="" height="37" src="/images/雲1.jpg" width="38"/></span></p>
<p><span>[</span>場景對象屬性工具欄按鈕<span>]</span></p>
<p>在場景對象屬性對話框中，單擊“點雲”按鈕以顯示<span>OC</span>樹對話框（“點雲”按鈕僅在最後選擇的是點雲時出現）。該對話框顯示最後選擇的點雲的設置和參數：</p>
<p><img alt="" height="413" src="/images/雲2.jpg" width="380"/></p>
<p><span>[</span>點雲對話框<span>]</span></p>
<p>不要使用<span>OC</span>樹計算。結構：默認情況下，點雲使用類似於<span>OC</span>樹的計算結構進行有效的點操作。此結構可能會減慢插入點和刪除點的速度。如果啟用此項目，則點插入將更加有效，但是點雲將不再可碰撞，不可測量或不可檢測，並且某些其他操作也可能會受到限制。您始終可以在以後的階段或通過<span>sim.setPointCloudOptions</span>切換此項目。</p>
<p>最高體素大小：將包含點的<span>OC</span>樹體素的最大大小。大小越小，此點雲所基於的<span>OC</span>樹數據結構將使用的內存就越大。</p>
<p>最高點數<span>/</span>體素：單個<span>OC</span>樹體素可以包含的最大點數。如果需要在此類體素中存儲更多點，它將被拆分為<span>8</span>個子體素，直到滿足約束條件為止。為了有效地進行碰撞檢測，距離計算和接近傳感器檢測，建議在單個體素中存儲大約<span>10-20</span>個點。</p>
<p>插入選定的可見對象：允許基於選定的可見對象插入點。僅考慮虛擬對象，形狀，超頻樹和點雲。選擇要插入的所有對象，然後最後選擇目標點雲對象。形狀將事先轉換為具有指定構建分辨率的臨時<span>OC</span>樹。插入公差項允許通過指定用於確定是否插入點的最小距離公差來避免重複的點。插入公差<span>&gt; 0.0</span>時，點插入將變慢。</p>
<p>減去選定的可見對象：允許基於選定的可見對象減去點。僅考慮虛擬變量，超頻樹和點雲。選擇要減去的所有對象，然後最後選擇目標點雲對象。假人和點雲將使用減法公差值來標識要刪除的點。</p>
<p>清除點雲：從點雲中刪除所有點。</p>
<p>點具有隨機顏色：每個點將具有隨機顏色。</p>
<p>顯示<span>OC</span>樹結構：顯示底層<span>OC</span>樹數據結構，主要用於調試目的。</p>
<p>顏色是自發光的：點將以自發光的顏色顯示。</p>
<p>點顯示比例：包含大量點的點雲可能會減慢渲染速度。通過將比率設置為小於<span>1</span>，將為每個包含點的<span>OC</span>樹體素顯示更少的點數。這僅對顯示<span>/</span>渲染的圖像有影響。</p>
<p>點大小：點的大小，以像素為單位。</p>
<p>調整下一次插入的顏色：允許選擇一種新的顏色，該顏色將用於新的點插入。</p>
<p>外部控制器教程<span>(External controller tutorial)</span></p>
<p>在<span>CoppeliaSim</span>中，有幾種方法可以控制機器人或仿真：</p>
<p>最方便的方法是編寫一個子腳本來處理給定機器人或模型的行為。這是最方便的方法，因為子腳本直接附加到場景對象，它們將與相關的場景對像一起復制，它們不需要使用外部工具進行任何編譯，它們可以在線程或非線程模式下運行，它們可以通過自定義<span>Lua</span>函數或<span>Lua</span>擴展庫進行擴展。使用子腳本的另一個主要優點是：與本節中提到的後<span>3</span>種方法（即使用常規<span>API</span>）一樣，沒有通信延遲，並且子腳本是應用程序主線程的一部分（固有的同步操作）。但是，編寫腳本有幾個缺點：您無法選擇編程語言，不能擁有最快的代碼，並且除了<span>Lua</span>擴展庫之外，無法直接訪問外部函數庫。</p>
<p>可以控制機器人或模擬的另一種方法是編寫插件。插件機制允許使用回調機制，自定義<span>Lua</span>函數註冊，當然還可以訪問外部函數庫。插件通常與子腳本結合使用（例如，插件註冊自定義的<span>Lua</span>函數，當從子腳本中調用時，該<span>Lua</span>函數將回調特定的插件函數）。使用插件的主要優勢還在於，與本節中提到的後<span>3</span>種方法（即使用常規<span>API</span>）一樣，沒有通信延遲，並且插件是應用程序主線程的一部分（固有的同步操作）。插件的缺點是：它們的編程更加複雜，並且也需要使用外部編譯。另請參閱插件教程。</p>
<p>控制機器人或模擬的第三種方法是編寫依賴於遠程<span>API</span>的外部客戶端應用程序。如果您需要從外部應用程序，機器人或另一台計算機運行控制代碼，這是一種非常便捷的方法。這也使您可以使用與運行真實機器人完全相同的代碼來控制仿真或模型（例如虛擬機器人）。遠程<span>API</span>有兩個版本：基於<span>B0</span>的遠程<span>API</span>和舊版遠程<span>API</span>。</p>
<p><span> </span>控制機器人或仿真的第五種方法是通過<span>ROS</span>節點。<span> ROS</span>與遠程<span>API</span>相似，是使多個分佈式進程相互通信的便捷方法。儘管遠程<span>API</span>非常輕巧且快速，但它僅允許與<span>CoppeliaSim</span>通信。另一方面，<span>ROS</span>允許幾乎將任意數量的進程相互連接，並且提供了大量兼容的庫。但是，它比遠程<span>API</span>重並且更複雜。有關詳細信息，請參閱<span>ROS</span>接口。</p>
<p>控制機器人或模擬的第六種方法是通過<span>BlueZero</span>（<span>BØ</span>）節點。與<span>ROS</span>類似，<span>BlueZero</span>是使多個分佈式進程相互通信的一種便捷方法，並且是一種輕量級的跨平台解決方案。有關詳細信息，請參考<span>BlueZero</span>界面。</p>
<p>控制機器人或模擬的第七種方法是編寫一個外部應用程序，該應用程序通過各種方式（例如管道，套接字，串行端口等）與<span>CoppeliaSim</span>插件或<span>CoppeliaSim</span>腳本進行通信。選擇編程語言（可以是任何一種語言）和靈活性是兩個主要優點。同樣，控制代碼也可以在機器人或其他計算機上運行。但是，與使用遠程<span>API</span>的方法相比，這種控制仿真或模型的方法更加乏味。</p>
<p>有<span>8</span>個與本教程相關的場景文件：<span> </span></p>
<p><span>scenes / controlTypeExamples /</span>受控<span>ViaScript</span>：一個機器人是通過非線程子腳本控制的，另一個是通過線程子腳本控制的。</p>
<p><span>scenes / controlTypeExamples /</span>受控<span>ViaPlugin</span>：機器人是通過插件控制的。</p>
<p><span>scenes / controlTypeExamples / controlViaB0RemoteApi</span>：通過基於<span>B0</span>的遠程<span>API</span>來控制機器人。</p>
<p><span>scenes / controlTypeExamples /</span>受控<span>ViaLegacyRemoteApi</span>：通過舊版遠程<span>API</span>控制機器人。</p>
<p><span>scenes / controlTypeExamples / controlViaB0</span>：通過<span>BlueZero</span>界面控制機器人。</p>
<p><span>scenes / controlTypeExamples /</span>受控<span>ViaRos</span>：通過<span>ROS</span>接口控制機器人。</p>
<p><span>scenes / controlTypeExamples / controlViaRos2</span>：通過<span>ROS2</span>接口控制機器人。</p>
<p><span>scenes / controlTypeExamples /</span>受控<span>ViaTcp</span>：通過<span>LuaSocket</span>和<span>TCP</span>控制機器人。</p>
<p><span><img alt="" height="581" src="/images/輸出.jpg" width="752"/><br/></span></p>
<p>在所有<span>8</span>種情況下，都使用子腳本，主要是為了與外界建立鏈接（例如，啟動正確的客戶端應用程序，並將正確的對象句柄傳遞給它）。有兩種其他方法可以控制機器人，模擬或模擬器本身：使用自定義腳本或附加組件。但是，不建議將它們用於控制，而應使用在模擬未運行時處理功能。<span> </span></p>
<p>例如，鏈接到場景控制的<span>ViaB0RemoteApi.ttt</span>中的機器人的子腳本具有以下主要任務：</p>
<p><span> </span>使用某些對象句柄作為參數啟動控制器應用程序（<span>bubbleRobClient_b0RemoteApi</span>）。基於對象<span>B0</span>的遠程<span>API</span>的服務器功能由對象<span>b0RemoteApiServer</span>提供。</p>
<p>作為另一個示例，鏈接到場景控制的<span>ViaRos.ttt</span>中的機器人的子腳本具有以下主要任務：</p>
<p>檢查是否已加載<span>CoppeliaSim</span>的<span>ROS</span>接口</p>
<p>使用某些主題名稱或對象句柄作為參數啟動控制器應用程序（<span>rosBubbleRob</span>）</p>
<p>然而，作為另一個示例，鏈接到場景控制的<span>ViaTcp.ttt</span>中的機器人的子腳本具有以下主要任務：</p>
<p>搜索空閒的套接字連接端口</p>
<p>使用所選的連接端口作為參數啟動控制器應用程序（<span>bubbleRobServer</span>）</p>
<p>本地連接到控制器應用程序</p>
<p>在每次仿真過程中，將傳感器值發送到控制器，並從控制器讀取所需的電機值</p>
<p>在每次模擬過程中，將所需的電機值應用於機器人的關節</p>
<p>運行模擬，然後復制並粘貼機器人：您將看到重複的機器人將直接運行，因為附加的子腳本負責啟動各自外部應用程序的新實例，或調用適當的插件函數。</p>
<p><em><strong>心得</strong></em></p>
<p>CoppeliaSim 裡面有許多功能可以供我們使用，例如裡面的假人可以被用來測量與機器人的距離，可以被偵測器偵測到的，同時具有可以放在路徑上做為輔助的對象……等，在這個電子書裡讓我訝異的是他的API 不是只有Python能用而已，可以用許多程式來寫API，讓我覺得自己所學的還不太足夠應該多加努力。</p>